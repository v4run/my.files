# Go to directory and copy git diff and comeback
cpdiff() {
	if [ -z "$1" ]; then
		return
	fi
	pushd "$1" && git diff | copy && popd
}

# Create a new docker container with current directory mounted to '/project'
function rund() {
	docker container run -it --rm -v "$(pwd)":/project -w /project "$@"
}

# build a new docker image from a dockerfile in the current directory
# and run the container with current directory mounted
function brund() {
	DOCKERFILE=${DOCKERFILE:-Dockerfile}
	local IMAGE_NAME
	local CURRENT_DIR
	CURRENT_DIR=$(dirname "$0")
	if [ -f "$CURRENT_DIR/$DOCKERFILE" ]; then
		# Build new image using the Dockerfile
		log_info "Dockerfile found. Building new image with it"
		IMAGE_NAME="$(docker image build -f $DOCKERFILE -q . | cut -d: -f 2)"
	else
		log_error "No Dockerfile found. Please create a Dockerfile and try again"
		return 1
	fi
	rund "$IMAGE_NAME" "$@"
}

# ANSI color codes
ESC_CODE='\033'
CLEAR='\033[0m'

# log level colors
ERR="${ESC_CODE}[1;31m" # bold red
INF="${ESC_CODE}[0;32m" # green
WAR="${ESC_CODE}[0;33m" # yellow

# logging helper functions
log_info() { echo "[${INF}INFO${CLEAR}]" "$@" }
log_error() { echo "[${ERR}ERROR$CLEAR]" "$@" }
log_warn() { echo "[${WAR}WARN$CLEAR]" "$@" }
